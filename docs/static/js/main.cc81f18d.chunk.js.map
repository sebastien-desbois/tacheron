{"version":3,"sources":["components/BottomBar.tsx","components/AppPanel.tsx","containers/App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","text","padding","spacing","paper","marginBottom","list","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","BottomBar","classes","AppBar","color","className","Toolbar","IconButton","edge","aria-label","Fab","displayName","messages","id","primary","secondary","person","AppPanel","Paper","square","List","map","Fragment","key","ListSubheader","ListItem","button","ListItemAvatar","Avatar","alt","src","ListItemText","App","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cc81f18d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      marginBottom: 35,\r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n      position: 'absolute',\r\n      zIndex: 1,\r\n      top: -30,\r\n      left: 0,\r\n      right: 0,\r\n      margin: '0 auto',\r\n    },\r\n  }),\r\n);\r\n\r\nfunction BottomBar() {\r\n    // Configure CSS styles\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\r\n            <AddIcon />\r\n          </Fab>\r\n          <div className={classes.grow} />\r\n          <IconButton color=\"inherit\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton edge=\"end\" color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}\r\n(BottomBar as React.SFC).displayName = 'AppPanel';\r\nexport default BottomBar;\r\n","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport BottomBar from './BottomBar';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      marginBottom: 35,\r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n      position: 'absolute',\r\n      zIndex: 1,\r\n      top: -30,\r\n      left: 0,\r\n      right: 0,\r\n      margin: '0 auto',\r\n    },\r\n  }),\r\n);\r\n\r\nconst messages = [\r\n    {\r\n      id: 1,\r\n      primary: 'Brunch this week?',\r\n      secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n      person: '/static/images/avatar/5.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      primary: 'Birthday Gift',\r\n      secondary: `Do you have a suggestion for a good present for John on his work\r\n        anniversary. I am really confused & would love your thoughts on it.`,\r\n      person: '/static/images/avatar/1.jpg',\r\n    },\r\n    {\r\n      id: 3,\r\n      primary: 'Recipe to try',\r\n      secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\r\n      person: '/static/images/avatar/2.jpg',\r\n    },\r\n    {\r\n      id: 4,\r\n      primary: 'Yes!',\r\n      secondary: 'I have the tickets to the ReactConf for this year.',\r\n      person: '/static/images/avatar/3.jpg',\r\n    },\r\n    {\r\n      id: 5,\r\n      primary: \"Doctor's Appointment\",\r\n      secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\r\n      person: '/static/images/avatar/4.jpg',\r\n    },\r\n    {\r\n      id: 6,\r\n      primary: 'Discussion',\r\n      secondary: `Menus that are generated by the bottom app bar (such as a bottom\r\n        navigation drawer or overflow menu) open as bottom sheets at a higher elevation\r\n        than the bar.`,\r\n      person: '/static/images/avatar/5.jpg',\r\n    },\r\n    {\r\n      id: 7,\r\n      primary: 'Summer BBQ',\r\n      secondary: `Who wants to have a cookout this weekend? I just got some furniture\r\n        for my backyard and would love to fire up the grill.`,\r\n      person: '/static/images/avatar/1.jpg',\r\n    },\r\n  ];\r\n\r\nfunction AppPanel():JSX.Element {\r\n    // Configure CSS styles\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <Paper square className={classes.paper}>\r\n        <List className={classes.list}>\r\n          {messages.map(({ id, primary, secondary, person }) => (\r\n            <React.Fragment key={id}>\r\n              {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\r\n              {id === 3 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Profile Picture\" src={person} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={primary} secondary={secondary} />\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n        </Paper>\r\n        <Paper square className={classes.paper}>\r\n        <List className={classes.list}>\r\n          {messages.map(({ id, primary, secondary, person }) => (\r\n            <React.Fragment key={id}>\r\n              {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\r\n              {id === 3 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Profile Picture\" src={person} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={primary} secondary={secondary} />\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n        </Paper>\r\n        <BottomBar />\r\n      </>\r\n    );\r\n}\r\n(AppPanel as React.SFC).displayName = 'AppPanel';\r\n\r\nexport default AppPanel;\r\n","import * as React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppPanel from '../components/AppPanel';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <AppPanel />\n    </>\n  );\n}\n(App as React.SFC).displayName = 'App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction isProductionBuild() {\n  return process.env.NODE_ENV === 'production';\n}\n\nexport function register(config?: Config) {\n  if (isProductionBuild() && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('tacheron-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}